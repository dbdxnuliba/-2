Terminals unused in grammar

   POUND


State 102 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmlist

    2 stmlist: stm
    3        | stm stmlist

    4 stm: exp SEMICOLON
    5    | WHILE LPAREN exp RPAREN COLON stmlist END
    6    | BREAK SEMICOLON
    7    | RETURN exp SEMICOLON
    8    | fundec
    9    | threaddec
   10    | ifstm
   11    | variate ASSIGN array SEMICOLON
   12    | GLOBAL id
   13    | error SEMICOLON
   14    | error END

   15 fundec: DEF id LPAREN typefields RPAREN COLON stmlist END

   16 typefields: fieldl
   17           | fielddl
   18           | fieldl COMMA fielddl
   19           | /* empty */

   20 field: id COLON id

   21 fieldl: field
   22       | field COMMA fieldl

   23 fieldd: id COLON id ASSIGN exp

   24 fielddl: fieldd COMMA fielddl
   25        | fieldd

   26 threaddec: THREAD id LPAREN RPAREN COLON stmlist END

   27 ifstm: IF exp COLON stmlist eliflist END
   28      | IF exp COLON stmlist END
   29      | IF exp COLON stmlist ELSE COLON stmlist END
   30      | IF exp COLON stmlist eliflist ELSE COLON stmlist END

   31 eliflist: elifexp
   32         | elifexp eliflist

   33 elifexp: ELIF exp COLON stmlist

   34 array: ARRAY LPAREN INT COMMA SINT RPAREN
   35      | ARRAY LPAREN INT COMMA SINT COMMA clist RPAREN
   36      | ARRAY LPAREN INT COMMA SFLOAT RPAREN
   37      | ARRAY LPAREN INT COMMA SFLOAT COMMA clist RPAREN
   38      | ARRAY LPAREN INT COMMA SCHAR RPAREN
   39      | ARRAY LPAREN id RPAREN

   40 exp: exp PLUS exp
   41    | exp MINUS exp
   42    | exp TIMES exp
   43    | exp DIVIDE exp
   44    | MINUS exp
   45    | exp EQ exp
   46    | exp NEQ exp
   47    | exp GT exp
   48    | exp GE exp
   49    | exp LT exp
   50    | exp LE exp
   51    | exp AND exp
   52    | exp OR exp
   53    | exp XOR exp
   54    | NOT exp
   55    | funcall
   56    | threadcall
   57    | LPAREN exp RPAREN
   58    | variate
   59    | variate ASSIGN exp
   60    | cnum
   61    | clist
   62    | STRING
   63    | LBRACK POSE RBRACK

   64 funcall: id LPAREN args RPAREN

   65 args: exp
   66     | exp COMMA args
   67     | /* empty */

   68 threadcall: RUN id LPAREN RPAREN

   69 variate: id
   70        | id LBRACK exp RBRACK

   71 clist: LBRACK cnumlist RBRACK

   72 cnumlist: cnum
   73         | cnum COMMA cnumlist

   74 cnum: INT
   75     | DOUBLE
   76     | BOOL

   77 id: ID


Terminals, with rules where they appear

$end (0) 0
error (256) 13 14
ASSIGN (258) 11 23 59
XOR (259) 53
OR (260) 52
AND (261) 51
GE (262) 48
GT (263) 47
LE (264) 50
LT (265) 49
NEQ (266) 46
EQ (267) 45
MINUS (268) 41 44
PLUS (269) 40
DIVIDE (270) 43
TIMES (271) 42
NOT (272) 54
UMINUS (273)
BOOL (274) 76
ID (275) 77
STRING (276) 62
INT (277) 34 35 36 37 38 74
DOUBLE (278) 75
COLON (279) 5 15 20 23 26 27 28 29 30 33
COMMA (280) 18 22 24 34 35 36 37 38 66 73
LBRACK (281) 63 70 71
RBRACK (282) 63 70 71
LPAREN (283) 5 15 26 34 35 36 37 38 39 57 64 68
RPAREN (284) 5 15 26 34 35 36 37 38 39 57 64 68
POUND (285)
SEMICOLON (286) 4 6 7 11 13
POSE (287) 63
ARRAY (288) 34 35 36 37 38 39
SINT (289) 34 35
SFLOAT (290) 36 37
SCHAR (291) 38
IF (292) 27 28 29 30
ELIF (293) 33
ELSE (294) 29 30
END (295) 5 14 15 26 27 28 29 30
WHILE (296) 5
BREAK (297) 6
RETURN (298) 7
DEF (299) 15
THREAD (300) 26
RUN (301) 68
GLOBAL (302) 12


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
stmlist (50)
    on left: 2 3, on right: 1 3 5 15 26 27 28 29 30 33
stm (51)
    on left: 4 5 6 7 8 9 10 11 12 13 14, on right: 2 3
fundec (52)
    on left: 15, on right: 8
typefields (53)
    on left: 16 17 18 19, on right: 15
field (54)
    on left: 20, on right: 21 22
fieldl (55)
    on left: 21 22, on right: 16 18 22
fieldd (56)
    on left: 23, on right: 24 25
fielddl (57)
    on left: 24 25, on right: 17 18 24
threaddec (58)
    on left: 26, on right: 9
ifstm (59)
    on left: 27 28 29 30, on right: 10
eliflist (60)
    on left: 31 32, on right: 27 30 32
elifexp (61)
    on left: 33, on right: 31 32
array (62)
    on left: 34 35 36 37 38 39, on right: 11
exp (63)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
    58 59 60 61 62 63, on right: 4 5 7 23 27 28 29 30 33 40 41 42 43
    44 45 46 47 48 49 50 51 52 53 54 57 59 65 66 70
funcall (64)
    on left: 64, on right: 55
args (65)
    on left: 65 66 67, on right: 64 66
threadcall (66)
    on left: 68, on right: 56
variate (67)
    on left: 69 70, on right: 11 58 59
clist (68)
    on left: 71, on right: 35 37 61
cnumlist (69)
    on left: 72 73, on right: 71 73
cnum (70)
    on left: 74 75 76, on right: 60 72 73
id (71)
    on left: 77, on right: 12 15 20 23 26 39 64 68 69 70


state 0

    0 $accept: . program $end

    error   shift, and go to state 1
    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    BREAK   shift, and go to state 13
    RETURN  shift, and go to state 14
    DEF     shift, and go to state 15
    THREAD  shift, and go to state 16
    RUN     shift, and go to state 17
    GLOBAL  shift, and go to state 18

    program     go to state 19
    stmlist     go to state 20
    stm         go to state 21
    fundec      go to state 22
    threaddec   go to state 23
    ifstm       go to state 24
    exp         go to state 25
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 28
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 1

   13 stm: error . SEMICOLON
   14    | error . END

    SEMICOLON  shift, and go to state 32
    END        shift, and go to state 33


state 2

   44 exp: MINUS . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 34
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 3

   54 exp: NOT . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 36
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 4

   76 cnum: BOOL .

    $default  reduce using rule 76 (cnum)


state 5

   77 id: ID .

    $default  reduce using rule 77 (id)


state 6

   62 exp: STRING .

    $default  reduce using rule 62 (exp)


state 7

   74 cnum: INT .

    $default  reduce using rule 74 (cnum)


state 8

   75 cnum: DOUBLE .

    $default  reduce using rule 75 (cnum)


state 9

   63 exp: LBRACK . POSE RBRACK
   71 clist: LBRACK . cnumlist RBRACK

    BOOL    shift, and go to state 4
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    POSE    shift, and go to state 37

    cnumlist  go to state 38
    cnum      go to state 39


state 10

   57 exp: LPAREN . exp RPAREN

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 40
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 11

   27 ifstm: IF . exp COLON stmlist eliflist END
   28      | IF . exp COLON stmlist END
   29      | IF . exp COLON stmlist ELSE COLON stmlist END
   30      | IF . exp COLON stmlist eliflist ELSE COLON stmlist END

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 41
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 12

    5 stm: WHILE . LPAREN exp RPAREN COLON stmlist END

    LPAREN  shift, and go to state 42


state 13

    6 stm: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 43


state 14

    7 stm: RETURN . exp SEMICOLON

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 44
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 15

   15 fundec: DEF . id LPAREN typefields RPAREN COLON stmlist END

    ID  shift, and go to state 5

    id  go to state 45


state 16

   26 threaddec: THREAD . id LPAREN RPAREN COLON stmlist END

    ID  shift, and go to state 5

    id  go to state 46


state 17

   68 threadcall: RUN . id LPAREN RPAREN

    ID  shift, and go to state 5

    id  go to state 47


state 18

   12 stm: GLOBAL . id

    ID  shift, and go to state 5

    id  go to state 48


state 19

    0 $accept: program . $end

    $end  shift, and go to state 49


state 20

    1 program: stmlist .

    $default  reduce using rule 1 (program)


state 21

    2 stmlist: stm .
    3        | stm . stmlist

    error   shift, and go to state 1
    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    BREAK   shift, and go to state 13
    RETURN  shift, and go to state 14
    DEF     shift, and go to state 15
    THREAD  shift, and go to state 16
    RUN     shift, and go to state 17
    GLOBAL  shift, and go to state 18

    $end  reduce using rule 2 (stmlist)
    ELIF  reduce using rule 2 (stmlist)
    ELSE  reduce using rule 2 (stmlist)
    END   reduce using rule 2 (stmlist)

    stmlist     go to state 50
    stm         go to state 21
    fundec      go to state 22
    threaddec   go to state 23
    ifstm       go to state 24
    exp         go to state 25
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 28
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 22

    8 stm: fundec .

    $default  reduce using rule 8 (stm)


state 23

    9 stm: threaddec .

    $default  reduce using rule 9 (stm)


state 24

   10 stm: ifstm .

    $default  reduce using rule 10 (stm)


state 25

    4 stm: exp . SEMICOLON
   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp

    XOR        shift, and go to state 51
    OR         shift, and go to state 52
    AND        shift, and go to state 53
    GE         shift, and go to state 54
    GT         shift, and go to state 55
    LE         shift, and go to state 56
    LT         shift, and go to state 57
    NEQ        shift, and go to state 58
    EQ         shift, and go to state 59
    MINUS      shift, and go to state 60
    PLUS       shift, and go to state 61
    DIVIDE     shift, and go to state 62
    TIMES      shift, and go to state 63
    SEMICOLON  shift, and go to state 64


state 26

   55 exp: funcall .

    $default  reduce using rule 55 (exp)


state 27

   56 exp: threadcall .

    $default  reduce using rule 56 (exp)


state 28

   11 stm: variate . ASSIGN array SEMICOLON
   58 exp: variate .
   59    | variate . ASSIGN exp

    ASSIGN  shift, and go to state 65

    $default  reduce using rule 58 (exp)


state 29

   61 exp: clist .

    $default  reduce using rule 61 (exp)


state 30

   60 exp: cnum .

    $default  reduce using rule 60 (exp)


state 31

   64 funcall: id . LPAREN args RPAREN
   69 variate: id .
   70        | id . LBRACK exp RBRACK

    LBRACK  shift, and go to state 66
    LPAREN  shift, and go to state 67

    $default  reduce using rule 69 (variate)


state 32

   13 stm: error SEMICOLON .

    $default  reduce using rule 13 (stm)


state 33

   14 stm: error END .

    $default  reduce using rule 14 (stm)


state 34

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   44    | MINUS exp .
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp

    $default  reduce using rule 44 (exp)


state 35

   58 exp: variate .
   59    | variate . ASSIGN exp

    ASSIGN  shift, and go to state 68

    $default  reduce using rule 58 (exp)


state 36

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp
   54    | NOT exp .

    $default  reduce using rule 54 (exp)


state 37

   63 exp: LBRACK POSE . RBRACK

    RBRACK  shift, and go to state 69


state 38

   71 clist: LBRACK cnumlist . RBRACK

    RBRACK  shift, and go to state 70


state 39

   72 cnumlist: cnum .
   73         | cnum . COMMA cnumlist

    COMMA  shift, and go to state 71

    $default  reduce using rule 72 (cnumlist)


state 40

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp
   57    | LPAREN exp . RPAREN

    XOR     shift, and go to state 51
    OR      shift, and go to state 52
    AND     shift, and go to state 53
    GE      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    LT      shift, and go to state 57
    NEQ     shift, and go to state 58
    EQ      shift, and go to state 59
    MINUS   shift, and go to state 60
    PLUS    shift, and go to state 61
    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63
    RPAREN  shift, and go to state 72


state 41

   27 ifstm: IF exp . COLON stmlist eliflist END
   28      | IF exp . COLON stmlist END
   29      | IF exp . COLON stmlist ELSE COLON stmlist END
   30      | IF exp . COLON stmlist eliflist ELSE COLON stmlist END
   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp

    XOR     shift, and go to state 51
    OR      shift, and go to state 52
    AND     shift, and go to state 53
    GE      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    LT      shift, and go to state 57
    NEQ     shift, and go to state 58
    EQ      shift, and go to state 59
    MINUS   shift, and go to state 60
    PLUS    shift, and go to state 61
    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63
    COLON   shift, and go to state 73


state 42

    5 stm: WHILE LPAREN . exp RPAREN COLON stmlist END

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 74
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 43

    6 stm: BREAK SEMICOLON .

    $default  reduce using rule 6 (stm)


state 44

    7 stm: RETURN exp . SEMICOLON
   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp

    XOR        shift, and go to state 51
    OR         shift, and go to state 52
    AND        shift, and go to state 53
    GE         shift, and go to state 54
    GT         shift, and go to state 55
    LE         shift, and go to state 56
    LT         shift, and go to state 57
    NEQ        shift, and go to state 58
    EQ         shift, and go to state 59
    MINUS      shift, and go to state 60
    PLUS       shift, and go to state 61
    DIVIDE     shift, and go to state 62
    TIMES      shift, and go to state 63
    SEMICOLON  shift, and go to state 75


state 45

   15 fundec: DEF id . LPAREN typefields RPAREN COLON stmlist END

    LPAREN  shift, and go to state 76


state 46

   26 threaddec: THREAD id . LPAREN RPAREN COLON stmlist END

    LPAREN  shift, and go to state 77


state 47

   68 threadcall: RUN id . LPAREN RPAREN

    LPAREN  shift, and go to state 78


state 48

   12 stm: GLOBAL id .

    $default  reduce using rule 12 (stm)


state 49

    0 $accept: program $end .

    $default  accept


state 50

    3 stmlist: stm stmlist .

    $default  reduce using rule 3 (stmlist)


state 51

   53 exp: exp XOR . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 79
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 52

   52 exp: exp OR . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 80
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 53

   51 exp: exp AND . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 81
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 54

   48 exp: exp GE . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 82
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 55

   47 exp: exp GT . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 83
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 56

   50 exp: exp LE . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 84
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 57

   49 exp: exp LT . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 85
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 58

   46 exp: exp NEQ . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 86
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 59

   45 exp: exp EQ . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 87
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 60

   41 exp: exp MINUS . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 88
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 61

   40 exp: exp PLUS . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 89
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 62

   43 exp: exp DIVIDE . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 90
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 63

   42 exp: exp TIMES . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 91
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 64

    4 stm: exp SEMICOLON .

    $default  reduce using rule 4 (stm)


state 65

   11 stm: variate ASSIGN . array SEMICOLON
   59 exp: variate ASSIGN . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    ARRAY   shift, and go to state 92
    RUN     shift, and go to state 17

    array       go to state 93
    exp         go to state 94
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 66

   70 variate: id LBRACK . exp RBRACK

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 95
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 67

   64 funcall: id LPAREN . args RPAREN

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    $default  reduce using rule 67 (args)

    exp         go to state 96
    funcall     go to state 26
    args        go to state 97
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 68

   59 exp: variate ASSIGN . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 94
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 69

   63 exp: LBRACK POSE RBRACK .

    $default  reduce using rule 63 (exp)


state 70

   71 clist: LBRACK cnumlist RBRACK .

    $default  reduce using rule 71 (clist)


state 71

   73 cnumlist: cnum COMMA . cnumlist

    BOOL    shift, and go to state 4
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8

    cnumlist  go to state 98
    cnum      go to state 39


state 72

   57 exp: LPAREN exp RPAREN .

    $default  reduce using rule 57 (exp)


state 73

   27 ifstm: IF exp COLON . stmlist eliflist END
   28      | IF exp COLON . stmlist END
   29      | IF exp COLON . stmlist ELSE COLON stmlist END
   30      | IF exp COLON . stmlist eliflist ELSE COLON stmlist END

    error   shift, and go to state 1
    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    BREAK   shift, and go to state 13
    RETURN  shift, and go to state 14
    DEF     shift, and go to state 15
    THREAD  shift, and go to state 16
    RUN     shift, and go to state 17
    GLOBAL  shift, and go to state 18

    stmlist     go to state 99
    stm         go to state 21
    fundec      go to state 22
    threaddec   go to state 23
    ifstm       go to state 24
    exp         go to state 25
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 28
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 74

    5 stm: WHILE LPAREN exp . RPAREN COLON stmlist END
   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp

    XOR     shift, and go to state 51
    OR      shift, and go to state 52
    AND     shift, and go to state 53
    GE      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    LT      shift, and go to state 57
    NEQ     shift, and go to state 58
    EQ      shift, and go to state 59
    MINUS   shift, and go to state 60
    PLUS    shift, and go to state 61
    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63
    RPAREN  shift, and go to state 100


state 75

    7 stm: RETURN exp SEMICOLON .

    $default  reduce using rule 7 (stm)


state 76

   15 fundec: DEF id LPAREN . typefields RPAREN COLON stmlist END

    ID  shift, and go to state 5

    $default  reduce using rule 19 (typefields)

    typefields  go to state 101
    field       go to state 102
    fieldl      go to state 103
    fieldd      go to state 104
    fielddl     go to state 105
    id          go to state 106


state 77

   26 threaddec: THREAD id LPAREN . RPAREN COLON stmlist END

    RPAREN  shift, and go to state 107


state 78

   68 threadcall: RUN id LPAREN . RPAREN

    RPAREN  shift, and go to state 108


state 79

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp
   53    | exp XOR exp .

    GE      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    LT      shift, and go to state 57
    NEQ     shift, and go to state 58
    EQ      shift, and go to state 59
    MINUS   shift, and go to state 60
    PLUS    shift, and go to state 61
    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63

    $default  reduce using rule 53 (exp)


state 80

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   52    | exp OR exp .
   53    | exp . XOR exp

    GE      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    LT      shift, and go to state 57
    NEQ     shift, and go to state 58
    EQ      shift, and go to state 59
    MINUS   shift, and go to state 60
    PLUS    shift, and go to state 61
    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63

    $default  reduce using rule 52 (exp)


state 81

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   51    | exp AND exp .
   52    | exp . OR exp
   53    | exp . XOR exp

    GE      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    LT      shift, and go to state 57
    NEQ     shift, and go to state 58
    EQ      shift, and go to state 59
    MINUS   shift, and go to state 60
    PLUS    shift, and go to state 61
    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63

    $default  reduce using rule 51 (exp)


state 82

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   48    | exp GE exp .
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp

    MINUS   shift, and go to state 60
    PLUS    shift, and go to state 61
    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 48 (exp)


state 83

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   47    | exp GT exp .
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp

    MINUS   shift, and go to state 60
    PLUS    shift, and go to state 61
    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 47 (exp)


state 84

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   50    | exp LE exp .
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp

    MINUS   shift, and go to state 60
    PLUS    shift, and go to state 61
    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 50 (exp)


state 85

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   49    | exp LT exp .
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp

    MINUS   shift, and go to state 60
    PLUS    shift, and go to state 61
    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 49 (exp)


state 86

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   46    | exp NEQ exp .
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp

    MINUS   shift, and go to state 60
    PLUS    shift, and go to state 61
    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 46 (exp)


state 87

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   45    | exp EQ exp .
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp

    MINUS   shift, and go to state 60
    PLUS    shift, and go to state 61
    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 45 (exp)


state 88

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   41    | exp MINUS exp .
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp

    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63

    $default  reduce using rule 41 (exp)


state 89

   40 exp: exp . PLUS exp
   40    | exp PLUS exp .
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp

    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63

    $default  reduce using rule 40 (exp)


state 90

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   43    | exp DIVIDE exp .
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp

    $default  reduce using rule 43 (exp)


state 91

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   42    | exp TIMES exp .
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp

    $default  reduce using rule 42 (exp)


state 92

   34 array: ARRAY . LPAREN INT COMMA SINT RPAREN
   35      | ARRAY . LPAREN INT COMMA SINT COMMA clist RPAREN
   36      | ARRAY . LPAREN INT COMMA SFLOAT RPAREN
   37      | ARRAY . LPAREN INT COMMA SFLOAT COMMA clist RPAREN
   38      | ARRAY . LPAREN INT COMMA SCHAR RPAREN
   39      | ARRAY . LPAREN id RPAREN

    LPAREN  shift, and go to state 109


state 93

   11 stm: variate ASSIGN array . SEMICOLON

    SEMICOLON  shift, and go to state 110


state 94

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp
   59    | variate ASSIGN exp .

    XOR     shift, and go to state 51
    OR      shift, and go to state 52
    AND     shift, and go to state 53
    GE      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    LT      shift, and go to state 57
    NEQ     shift, and go to state 58
    EQ      shift, and go to state 59
    MINUS   shift, and go to state 60
    PLUS    shift, and go to state 61
    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63

    $default  reduce using rule 59 (exp)


state 95

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp
   70 variate: id LBRACK exp . RBRACK

    XOR     shift, and go to state 51
    OR      shift, and go to state 52
    AND     shift, and go to state 53
    GE      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    LT      shift, and go to state 57
    NEQ     shift, and go to state 58
    EQ      shift, and go to state 59
    MINUS   shift, and go to state 60
    PLUS    shift, and go to state 61
    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63
    RBRACK  shift, and go to state 111


state 96

   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp
   65 args: exp .
   66     | exp . COMMA args

    XOR     shift, and go to state 51
    OR      shift, and go to state 52
    AND     shift, and go to state 53
    GE      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    LT      shift, and go to state 57
    NEQ     shift, and go to state 58
    EQ      shift, and go to state 59
    MINUS   shift, and go to state 60
    PLUS    shift, and go to state 61
    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63
    COMMA   shift, and go to state 112

    $default  reduce using rule 65 (args)


state 97

   64 funcall: id LPAREN args . RPAREN

    RPAREN  shift, and go to state 113


state 98

   73 cnumlist: cnum COMMA cnumlist .

    $default  reduce using rule 73 (cnumlist)


state 99

   27 ifstm: IF exp COLON stmlist . eliflist END
   28      | IF exp COLON stmlist . END
   29      | IF exp COLON stmlist . ELSE COLON stmlist END
   30      | IF exp COLON stmlist . eliflist ELSE COLON stmlist END

    ELIF  shift, and go to state 114
    ELSE  shift, and go to state 115
    END   shift, and go to state 116

    eliflist  go to state 117
    elifexp   go to state 118


state 100

    5 stm: WHILE LPAREN exp RPAREN . COLON stmlist END

    COLON  shift, and go to state 119


state 101

   15 fundec: DEF id LPAREN typefields . RPAREN COLON stmlist END

    RPAREN  shift, and go to state 120


state 102

   21 fieldl: field .
   22       | field . COMMA fieldl

    COMMA  shift, and go to state 121

    COMMA     [reduce using rule 21 (fieldl)]
    $default  reduce using rule 21 (fieldl)


state 103

   16 typefields: fieldl .
   18           | fieldl . COMMA fielddl

    COMMA  shift, and go to state 122

    $default  reduce using rule 16 (typefields)


state 104

   24 fielddl: fieldd . COMMA fielddl
   25        | fieldd .

    COMMA  shift, and go to state 123

    $default  reduce using rule 25 (fielddl)


state 105

   17 typefields: fielddl .

    $default  reduce using rule 17 (typefields)


state 106

   20 field: id . COLON id
   23 fieldd: id . COLON id ASSIGN exp

    COLON  shift, and go to state 124


state 107

   26 threaddec: THREAD id LPAREN RPAREN . COLON stmlist END

    COLON  shift, and go to state 125


state 108

   68 threadcall: RUN id LPAREN RPAREN .

    $default  reduce using rule 68 (threadcall)


state 109

   34 array: ARRAY LPAREN . INT COMMA SINT RPAREN
   35      | ARRAY LPAREN . INT COMMA SINT COMMA clist RPAREN
   36      | ARRAY LPAREN . INT COMMA SFLOAT RPAREN
   37      | ARRAY LPAREN . INT COMMA SFLOAT COMMA clist RPAREN
   38      | ARRAY LPAREN . INT COMMA SCHAR RPAREN
   39      | ARRAY LPAREN . id RPAREN

    ID   shift, and go to state 5
    INT  shift, and go to state 126

    id  go to state 127


state 110

   11 stm: variate ASSIGN array SEMICOLON .

    $default  reduce using rule 11 (stm)


state 111

   70 variate: id LBRACK exp RBRACK .

    $default  reduce using rule 70 (variate)


state 112

   66 args: exp COMMA . args

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    $default  reduce using rule 67 (args)

    exp         go to state 96
    funcall     go to state 26
    args        go to state 128
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 113

   64 funcall: id LPAREN args RPAREN .

    $default  reduce using rule 64 (funcall)


state 114

   33 elifexp: ELIF . exp COLON stmlist

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 129
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 115

   29 ifstm: IF exp COLON stmlist ELSE . COLON stmlist END

    COLON  shift, and go to state 130


state 116

   28 ifstm: IF exp COLON stmlist END .

    $default  reduce using rule 28 (ifstm)


state 117

   27 ifstm: IF exp COLON stmlist eliflist . END
   30      | IF exp COLON stmlist eliflist . ELSE COLON stmlist END

    ELSE  shift, and go to state 131
    END   shift, and go to state 132


state 118

   31 eliflist: elifexp .
   32         | elifexp . eliflist

    ELIF  shift, and go to state 114

    $default  reduce using rule 31 (eliflist)

    eliflist  go to state 133
    elifexp   go to state 118


state 119

    5 stm: WHILE LPAREN exp RPAREN COLON . stmlist END

    error   shift, and go to state 1
    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    BREAK   shift, and go to state 13
    RETURN  shift, and go to state 14
    DEF     shift, and go to state 15
    THREAD  shift, and go to state 16
    RUN     shift, and go to state 17
    GLOBAL  shift, and go to state 18

    stmlist     go to state 134
    stm         go to state 21
    fundec      go to state 22
    threaddec   go to state 23
    ifstm       go to state 24
    exp         go to state 25
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 28
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 120

   15 fundec: DEF id LPAREN typefields RPAREN . COLON stmlist END

    COLON  shift, and go to state 135


state 121

   22 fieldl: field COMMA . fieldl

    ID  shift, and go to state 5

    field   go to state 102
    fieldl  go to state 136
    id      go to state 137


state 122

   18 typefields: fieldl COMMA . fielddl

    ID  shift, and go to state 5

    fieldd   go to state 104
    fielddl  go to state 138
    id       go to state 139


state 123

   24 fielddl: fieldd COMMA . fielddl

    ID  shift, and go to state 5

    fieldd   go to state 104
    fielddl  go to state 140
    id       go to state 139


state 124

   20 field: id COLON . id
   23 fieldd: id COLON . id ASSIGN exp

    ID  shift, and go to state 5

    id  go to state 141


state 125

   26 threaddec: THREAD id LPAREN RPAREN COLON . stmlist END

    error   shift, and go to state 1
    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    BREAK   shift, and go to state 13
    RETURN  shift, and go to state 14
    DEF     shift, and go to state 15
    THREAD  shift, and go to state 16
    RUN     shift, and go to state 17
    GLOBAL  shift, and go to state 18

    stmlist     go to state 142
    stm         go to state 21
    fundec      go to state 22
    threaddec   go to state 23
    ifstm       go to state 24
    exp         go to state 25
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 28
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 126

   34 array: ARRAY LPAREN INT . COMMA SINT RPAREN
   35      | ARRAY LPAREN INT . COMMA SINT COMMA clist RPAREN
   36      | ARRAY LPAREN INT . COMMA SFLOAT RPAREN
   37      | ARRAY LPAREN INT . COMMA SFLOAT COMMA clist RPAREN
   38      | ARRAY LPAREN INT . COMMA SCHAR RPAREN

    COMMA  shift, and go to state 143


state 127

   39 array: ARRAY LPAREN id . RPAREN

    RPAREN  shift, and go to state 144


state 128

   66 args: exp COMMA args .

    $default  reduce using rule 66 (args)


state 129

   33 elifexp: ELIF exp . COLON stmlist
   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp

    XOR     shift, and go to state 51
    OR      shift, and go to state 52
    AND     shift, and go to state 53
    GE      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    LT      shift, and go to state 57
    NEQ     shift, and go to state 58
    EQ      shift, and go to state 59
    MINUS   shift, and go to state 60
    PLUS    shift, and go to state 61
    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63
    COLON   shift, and go to state 145


state 130

   29 ifstm: IF exp COLON stmlist ELSE COLON . stmlist END

    error   shift, and go to state 1
    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    BREAK   shift, and go to state 13
    RETURN  shift, and go to state 14
    DEF     shift, and go to state 15
    THREAD  shift, and go to state 16
    RUN     shift, and go to state 17
    GLOBAL  shift, and go to state 18

    stmlist     go to state 146
    stm         go to state 21
    fundec      go to state 22
    threaddec   go to state 23
    ifstm       go to state 24
    exp         go to state 25
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 28
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 131

   30 ifstm: IF exp COLON stmlist eliflist ELSE . COLON stmlist END

    COLON  shift, and go to state 147


state 132

   27 ifstm: IF exp COLON stmlist eliflist END .

    $default  reduce using rule 27 (ifstm)


state 133

   32 eliflist: elifexp eliflist .

    $default  reduce using rule 32 (eliflist)


state 134

    5 stm: WHILE LPAREN exp RPAREN COLON stmlist . END

    END  shift, and go to state 148


state 135

   15 fundec: DEF id LPAREN typefields RPAREN COLON . stmlist END

    error   shift, and go to state 1
    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    BREAK   shift, and go to state 13
    RETURN  shift, and go to state 14
    DEF     shift, and go to state 15
    THREAD  shift, and go to state 16
    RUN     shift, and go to state 17
    GLOBAL  shift, and go to state 18

    stmlist     go to state 149
    stm         go to state 21
    fundec      go to state 22
    threaddec   go to state 23
    ifstm       go to state 24
    exp         go to state 25
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 28
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 136

   22 fieldl: field COMMA fieldl .

    $default  reduce using rule 22 (fieldl)


state 137

   20 field: id . COLON id

    COLON  shift, and go to state 150


state 138

   18 typefields: fieldl COMMA fielddl .

    $default  reduce using rule 18 (typefields)


state 139

   23 fieldd: id . COLON id ASSIGN exp

    COLON  shift, and go to state 151


state 140

   24 fielddl: fieldd COMMA fielddl .

    $default  reduce using rule 24 (fielddl)


state 141

   20 field: id COLON id .
   23 fieldd: id COLON id . ASSIGN exp

    ASSIGN  shift, and go to state 152

    $default  reduce using rule 20 (field)


state 142

   26 threaddec: THREAD id LPAREN RPAREN COLON stmlist . END

    END  shift, and go to state 153


state 143

   34 array: ARRAY LPAREN INT COMMA . SINT RPAREN
   35      | ARRAY LPAREN INT COMMA . SINT COMMA clist RPAREN
   36      | ARRAY LPAREN INT COMMA . SFLOAT RPAREN
   37      | ARRAY LPAREN INT COMMA . SFLOAT COMMA clist RPAREN
   38      | ARRAY LPAREN INT COMMA . SCHAR RPAREN

    SINT    shift, and go to state 154
    SFLOAT  shift, and go to state 155
    SCHAR   shift, and go to state 156


state 144

   39 array: ARRAY LPAREN id RPAREN .

    $default  reduce using rule 39 (array)


state 145

   33 elifexp: ELIF exp COLON . stmlist

    error   shift, and go to state 1
    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    BREAK   shift, and go to state 13
    RETURN  shift, and go to state 14
    DEF     shift, and go to state 15
    THREAD  shift, and go to state 16
    RUN     shift, and go to state 17
    GLOBAL  shift, and go to state 18

    stmlist     go to state 157
    stm         go to state 21
    fundec      go to state 22
    threaddec   go to state 23
    ifstm       go to state 24
    exp         go to state 25
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 28
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 146

   29 ifstm: IF exp COLON stmlist ELSE COLON stmlist . END

    END  shift, and go to state 158


state 147

   30 ifstm: IF exp COLON stmlist eliflist ELSE COLON . stmlist END

    error   shift, and go to state 1
    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    BREAK   shift, and go to state 13
    RETURN  shift, and go to state 14
    DEF     shift, and go to state 15
    THREAD  shift, and go to state 16
    RUN     shift, and go to state 17
    GLOBAL  shift, and go to state 18

    stmlist     go to state 159
    stm         go to state 21
    fundec      go to state 22
    threaddec   go to state 23
    ifstm       go to state 24
    exp         go to state 25
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 28
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 148

    5 stm: WHILE LPAREN exp RPAREN COLON stmlist END .

    $default  reduce using rule 5 (stm)


state 149

   15 fundec: DEF id LPAREN typefields RPAREN COLON stmlist . END

    END  shift, and go to state 160


state 150

   20 field: id COLON . id

    ID  shift, and go to state 5

    id  go to state 161


state 151

   23 fieldd: id COLON . id ASSIGN exp

    ID  shift, and go to state 5

    id  go to state 162


state 152

   23 fieldd: id COLON id ASSIGN . exp

    MINUS   shift, and go to state 2
    NOT     shift, and go to state 3
    BOOL    shift, and go to state 4
    ID      shift, and go to state 5
    STRING  shift, and go to state 6
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8
    LBRACK  shift, and go to state 9
    LPAREN  shift, and go to state 10
    RUN     shift, and go to state 17

    exp         go to state 163
    funcall     go to state 26
    threadcall  go to state 27
    variate     go to state 35
    clist       go to state 29
    cnum        go to state 30
    id          go to state 31


state 153

   26 threaddec: THREAD id LPAREN RPAREN COLON stmlist END .

    $default  reduce using rule 26 (threaddec)


state 154

   34 array: ARRAY LPAREN INT COMMA SINT . RPAREN
   35      | ARRAY LPAREN INT COMMA SINT . COMMA clist RPAREN

    COMMA   shift, and go to state 164
    RPAREN  shift, and go to state 165


state 155

   36 array: ARRAY LPAREN INT COMMA SFLOAT . RPAREN
   37      | ARRAY LPAREN INT COMMA SFLOAT . COMMA clist RPAREN

    COMMA   shift, and go to state 166
    RPAREN  shift, and go to state 167


state 156

   38 array: ARRAY LPAREN INT COMMA SCHAR . RPAREN

    RPAREN  shift, and go to state 168


state 157

   33 elifexp: ELIF exp COLON stmlist .

    $default  reduce using rule 33 (elifexp)


state 158

   29 ifstm: IF exp COLON stmlist ELSE COLON stmlist END .

    $default  reduce using rule 29 (ifstm)


state 159

   30 ifstm: IF exp COLON stmlist eliflist ELSE COLON stmlist . END

    END  shift, and go to state 169


state 160

   15 fundec: DEF id LPAREN typefields RPAREN COLON stmlist END .

    $default  reduce using rule 15 (fundec)


state 161

   20 field: id COLON id .

    $default  reduce using rule 20 (field)


state 162

   23 fieldd: id COLON id . ASSIGN exp

    ASSIGN  shift, and go to state 152


state 163

   23 fieldd: id COLON id ASSIGN exp .
   40 exp: exp . PLUS exp
   41    | exp . MINUS exp
   42    | exp . TIMES exp
   43    | exp . DIVIDE exp
   45    | exp . EQ exp
   46    | exp . NEQ exp
   47    | exp . GT exp
   48    | exp . GE exp
   49    | exp . LT exp
   50    | exp . LE exp
   51    | exp . AND exp
   52    | exp . OR exp
   53    | exp . XOR exp

    XOR     shift, and go to state 51
    OR      shift, and go to state 52
    AND     shift, and go to state 53
    GE      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    LT      shift, and go to state 57
    NEQ     shift, and go to state 58
    EQ      shift, and go to state 59
    MINUS   shift, and go to state 60
    PLUS    shift, and go to state 61
    DIVIDE  shift, and go to state 62
    TIMES   shift, and go to state 63

    $default  reduce using rule 23 (fieldd)


state 164

   35 array: ARRAY LPAREN INT COMMA SINT COMMA . clist RPAREN

    LBRACK  shift, and go to state 170

    clist  go to state 171


state 165

   34 array: ARRAY LPAREN INT COMMA SINT RPAREN .

    $default  reduce using rule 34 (array)


state 166

   37 array: ARRAY LPAREN INT COMMA SFLOAT COMMA . clist RPAREN

    LBRACK  shift, and go to state 170

    clist  go to state 172


state 167

   36 array: ARRAY LPAREN INT COMMA SFLOAT RPAREN .

    $default  reduce using rule 36 (array)


state 168

   38 array: ARRAY LPAREN INT COMMA SCHAR RPAREN .

    $default  reduce using rule 38 (array)


state 169

   30 ifstm: IF exp COLON stmlist eliflist ELSE COLON stmlist END .

    $default  reduce using rule 30 (ifstm)


state 170

   71 clist: LBRACK . cnumlist RBRACK

    BOOL    shift, and go to state 4
    INT     shift, and go to state 7
    DOUBLE  shift, and go to state 8

    cnumlist  go to state 38
    cnum      go to state 39


state 171

   35 array: ARRAY LPAREN INT COMMA SINT COMMA clist . RPAREN

    RPAREN  shift, and go to state 173


state 172

   37 array: ARRAY LPAREN INT COMMA SFLOAT COMMA clist . RPAREN

    RPAREN  shift, and go to state 174


state 173

   35 array: ARRAY LPAREN INT COMMA SINT COMMA clist RPAREN .

    $default  reduce using rule 35 (array)


state 174

   37 array: ARRAY LPAREN INT COMMA SFLOAT COMMA clist RPAREN .

    $default  reduce using rule 37 (array)
